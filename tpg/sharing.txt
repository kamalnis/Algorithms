//Algorithm for the sharing of the tree
//Input: List of starting points(target conc. value) of graph , myset to store shared node
//Output: List of graphs with shared conc. values
bfs(t)
   queue<int> q;
   q.push(t)

   while(!q.empty())
      if(myset.find(t))
           share the node already present in the set and increment the counter for the particular cv

      else
          insert the node into the myset and initialize the counter of the cv with 1

      q.pop()

      for(int i=0;i<t.child.size;i++)
          push child of the node into the queue q




Sharing(Mixing graph){

    Initialize the set to store the conc. values
    foreach(t: Mixing tree)
        perform bfs(t) and enter the conc. values into the set along with it's frequency

    for(cv: counter)
        if(cv.second==1)
            remove the cv from the counter

}
